<html>
  <head>
    <title></title>
    <style>
    
    pie-chart {
      display:block;
      aspect: Pie(band:20px, sector:rgb(100,150,200), circle:rgb(230,230,230));
      size:200dip;
      font-size:30dip;
      vertical-align:middle;
      text-align:center;
    }
    
    </style>
    <script>
    
      class Pie extends Element
      {

        componentDidMount() {
          this.strokeWidth = this.style.variable("band") || 10; 
        }
         const strokeWidth = params.band || 10; 
         const strokeColor = params.sector || Color.RGB(100,0,0); 
        const circleColor = params.circle || Color.RGB(230,230,230); 
      
        let start = 0; 
        let value = 0;  

        function render(gfx) 
        {
          var [w,h] = this.state.box("dimension"); 
          var x = w/2; y = h/2;  
          var r = Math.min(w,h) / 2 - strokeWidth / 2;  
          
          gfx.strokeWidth = sw + 0.5;
          gfx.strokeStyle = circleColor;
          gfx.beginPath();
          gfx.arc(x,y,r,r, 0, 360);
          gfx.stroke();
          gfx.beginPath();
          gfx.strokeStyle = strokeColor;
          gfx.arc(x,y,r,r, 360 * start, 360 * value);
          gfx.stroke();
        }  
        
        this.paintBackground = render;
        
        // redefining property 'value' on that element
        this["value"] = property(v) {
          get return value;
          set {
            value = v;
            this.text = String.$({(value * 100).toInteger() }%) ;
            this.refresh();
          }
        };
        this.value = this.attributes["value"].toFloat(0.0);
      }

                 
      event change $(input) {
        $(pie-chart).value = this.value;
      }
      
    
    </script>
  </head>
<body>

  value: <input|hslider min=0.0 max=1.0 value=0.25 />

  <pie-chart value=0.25 />

</body>
</html>
